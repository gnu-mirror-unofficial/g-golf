@c -*-texinfo-*-
@c This is part of the GNU G-Golf Reference Manual.
@c Copyright (C) 2016 - 2018 Free Software Foundation, Inc.
@c See the file g-golf.texi for copying conditions.


@defindex ai


@node Arg Info
@subsection Arg Info

G-Golf Arg Info low level API.@*
GIArgInfo â€” Struct representing an argument.


@subheading Description

@code{GIArgInfo} represents an argument. An argument is always part of a
@code{GICallableInfo}.


@subheading Struct Hierarchy

@indentedblock
GIBaseInfo           	       @*
@ @ +--- GIArgInfo	       @*
@end indentedblock


@subheading Procedures

@indentedblock
@table @code
@item @ref{g-golf-ai-get-closure}
@end table
@end indentedblock

Note: in this section, the @var{info} argument is [must be] a pointer to
a @code{GIArgInfo}.


@anchor{g-golf-ai-get-closure}
@deffn Procedure g-golf-ai-get-closure info

Returns the index of the user data argument or -1 if there is none.

Obtain the index of the user data argument. This is only valid for
arguments which are callbacks.
@end deffn


@subheading Types and Values

@indentedblock
@table @code
@item @ref{%g-golf-ai-transfer}
@end table
@end indentedblock


@anchor{%g-golf-ai-transfer}
@defivar <genum> %g-golf-ai-transfer

The transfer is the exchange of data between two parts, from the callee
to the caller. The callee is either a function/method/signal or an
object/interface where a property is defined. The caller is the side
accessing a property or calling a function. @code{GITransfer} specifies
who's responsible for freeing the resources after the ownership transfer
is complete. In case of a containing type such as a list, an array or a
hash table the container itself is specified differently from the items
within the container itself. Each container is freed differently, check
the documentation for the types themselves for information on how to
free them.

An instance of @code{<genum>}, who's members are the scheme
representation of the @code{GITransfer}:

@indentedblock
@emph{type-name}: GITransfer  @*
@emph{scm-name}: gi-transfer  @*
@emph{value-set}:
@indentedblock
@table @code
@item nothing
transfer nothing from the callee (function or the type instance the
property belongs to) to the caller. The callee retains the ownership of
the transfer and the caller doesn't need to do anything to free up the
resources of this transfer

@item container
transfer the container (list, array, hash table) from the callee to the
caller. The callee retains the ownership of the individual items in the
container and the caller has to free up the container resources
@code{g_list_free}, @code{g_hash_table_destroy}, @dots{} of this transfer

@item everything
transfer everything, eg the container and its contents from the callee
to the caller. This is the case when the callee creates a copy of all
the data it returns. The caller is responsible for cleaning up the
container and item resources of this transfer

@end table
@end indentedblock
@end indentedblock
@end defivar

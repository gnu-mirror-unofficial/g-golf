@c -*-texinfo-*-
@c This is part of the GNU G-Golf Reference Manual.
@c Copyright (C) 2019 - 2020 Free Software Foundation, Inc.
@c See the file g-golf.texi for copying
@c conditions.


@c @defindex ei


@node GType
@subsection GType

G-Golf GType high level API.@*
The base of the GObject type system.


@subheading Classes

@indentedblock
@table @code
@item @ref{<gtype-class>}
@item @ref{<gtype-instance>}
@end table
@end indentedblock


@subheading Accessors and Methods

@indentedblock
@table @code
@item @ref{!info}
@item @ref{!namespace}
@item @ref{!g-type}
@item @ref{!g-name___}
@item @ref{!derived}
@item @ref{!g-inst}
@item @ref{unref}
@end table
@end indentedblock


@c @subheading Classes

@anchor{<gtype-class>}
@deftp Class <gtype-class>

The @code{metaclass} of all GType classes. Ensures that GType classes
have an @code{info} slot, holding a pointer to a
@code{GIObjectInfo}. Its slots are:

@indentedblock
@table @code
@item @emph{info}
#:accessor !info @*
#:init-keyword #:info @*

@item @emph{namespace}
#:accessor !namespace @*

@item @emph{g-type}
#:accessor !g-type @*

@item @emph{g-name}
#:accessor !g-name @*

@item @emph{derived}
#:accessor !derived	 @*
#:init-keyword #:derived @*
#:init-value #f

A class is derived when it is user defined (not imported), and inherit
a GObject subclass.
@end table
@end indentedblock

The @var{#:info} #:init-keyword is mandatory, other slots are
initialized automatically. All slots are immutable (to be precise, they
are not meant to be mutated, see @ref{GOOPS Notes and Conventions},
'Slots are not Immutable').
@end deftp


@anchor{!info}
@anchor{!namespace}
@anchor{!g-type}
@anchor{!g-name___}
@anchor{!derived}
@deffn Accessor !info class
@deffnx Accessor !namespace class
@deffnx Accessor !g-type class
@deffnx Accessor !g-name class
@deffnx Accessor !derived class

Returns the content of their respective slot for @var{class}.
@end deffn


@anchor{<gtype-instance>}
@deftp Class <gtype-instance>

The root class of all instantiatable GType classes. Adds a slot,
@code{g-inst}, to instances, which holds a pointer to the C value

@indentedblock
@table @code
@item @emph{g-inst}
#:accessor !g-inst @*
@c #:init-value #f @*
@end table
@end indentedblock

The @var{g-inst} slot is initialized automatically and immutable (to be
precise, it is not meant to be mutated, see @ref{GOOPS Notes and
Conventions}, 'Slots are not Immutable').
@end deftp


@anchor{!g-inst}
@deffn Accessor !g-inst instance

Returns the content of the @var{g-inst} slot for @var{instance}.
@end deffn


@anchor{unref}
@deffn Method unref instance

Returns nothing.

This method calls @ref{g-object-unref} on the @code{g-inst} of
@var{instance}.

When the reference count for the @code{g-inst} reaches 0 (zero), it sets
the @code{g-inst} slot value for @var{instance} to #f and removes
@var{instance} from the @code{%g-inst-cache}.

This method must be called upon instances that are not referenced
anywhere anymore, so that their memory can be freed by the next gc
occurrence.
@end deffn
